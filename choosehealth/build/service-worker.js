"use strict";var precacheConfig=[["/index.html","bef3f247b7c4b740701e5d7486070bd3"],["/static/css/main.7a1a8e95.css","cf78be0e516f627b7f8d0739891abf3f"],["/static/js/main.79cbcb43.js","4a507ac407d56685e156b7440e6cf5a5"],["/static/media/bacon-strip-emoji.5d6a055e.png","5d6a055ed36438b55c06517db6f73004"],["/static/media/bread-emoji.7a5b4386.png","7a5b4386bec656e29aeb91bc83a007e9"],["/static/media/broccoli-emoji.e88ae38d.png","e88ae38d760d99ecf9864a3fd6e67edb"],["/static/media/favicon.18932a94.png","18932a94583d99b2810b04ec37e0a990"],["/static/media/fries-emoji.d62612a3.png","d62612a33f4b997b9f65fba9a9c003ed"],["/static/media/loader-gray.abbf3a27.gif","abbf3a274ff4e90cbe6d70cabdbf5d51"],["/static/media/loader.433c1b0d.gif","433c1b0d43656d392981a9148d1e8dec"],["/static/media/login-logo.fa1ff4ce.png","fa1ff4ce392627447b3581b42844ed6f"],["/static/media/logo.ab684112.png","ab6841129f9a3c68d1bbd61d54967e28"],["/static/media/lollipop-emoji.f3c87f2f.png","f3c87f2f76515405c61c620a82caa2e9"],["/static/media/plate-emoji.01bd06d1.png","01bd06d119d038725db69e97742836bc"],["/static/media/refresh-icon-inactive.2c255686.png","2c2556866d5f561b2e41c91715fd952b"],["/static/media/refresh-icon.2d7932da.png","2d7932da4e86f9281117c6e32fddc410"],["/static/media/spinning-loader.1a242e64.gif","1a242e64b4d3a413745d97c007085c0b"],["/static/media/steak-emoji.cade3885.png","cade3885f074156a2611806bedfa81e7"],["/static/media/taco-emoji.1cbf0280.png","1cbf028089f93d59b1c70955d7507d2f"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});